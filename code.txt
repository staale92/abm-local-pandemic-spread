;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; An Agent-Based Model of Local Pandemic Spread: Analysis of SARS-CoV-2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

globals [max-infected
max-immun                                                          ;duration of immunity
gdp                                                                ;GDP value
healed                                                             ;recovered people
total-cases                                                        ;count of total cases
current-positive                                                   ;count of current positives
deaths                                                             ;count of deaths
;tourism?                                                          ;it is activated with a switch.
                                                                      ;;If on: there is tourism in the country starting from the tick defined by the "openness-to-tourism" slider
tc1 tc2 tc3 tc4 tc5 tc6 tc7 tc8 tc9 tc10                           ;R0 construction: total cases at a given day
r01 r02 r03 r04 r05 r06 r07 r08 r09 r010                           ;R0 construction: using 10-day moving average
R0-calculation                                                     ;R0 calculation for the period
ma5                                                                ;R0 construction: 5-day moving average
ma10                                                               ;R0 construction: 10-day moving average
R0 Re Pc                                                           ;R0,Re, and Pc indexes
p-d f-m t-old p-d-old f-m-old pdfm                                 ;they record the changes to transmissibility rate: p-d for physical distance and f-m for face mask
count-lockdown                                                     ;it counts the lockdowns and reopenings timings
Italy1 Italy2 Italy3 Italy4 Italy5 Italy6                          ;lockdown phases for Italy
Germany1 Germany2 Germany3 Germany4 Germany5 Germany6              ;lockdown phases for Germany
Sweden1 Sweden2 Sweden3 Sweden4 Sweden5 Sweden6                    ;lockdown phases for Sweden
Brazil1 Brazil2 Brazil3 Brazil4 Brazil5 Brazil6                    ;lockdown phases for Brazil
h-saturation                                                       ;ICU hospital beds saturation
seniors                                                            ;over-65 persons (country-specific)
hospital-beds                                                      ;index of ICU beds for seriously ill patients in hospital (country-specific)
hospitalized-rate                                                  ;hospitalization rate (country-specific)
case-fatality-rate                                                 ;case fatality rate (country-specific)
recovery-index                                                     ;recovery index (country-specific)
home-isolation-rate                                                ;non-seriously ill patients (country-specific)
gdp-init                                                           ;initial GDP value
gdp-value                                                          ;GDP value (used for graph)
]

turtles-own[
  countim                                                          ;counts for how many days the agent is immune
  infected?
  immune?
  senior?                                                          ;senior (True or False)
  tourist?                                                         ;tourist (True or False)
  stay-time                                                        ;staying time in the considered country (counted for the tourists)
  incubation                                                       ;incubation period: it counts how long the virus incubation lasts
  maxincub                                                         ;maximum incubation period: for the elderly it is 3 days and for the young people it is 7 days
  infectivity                                                      ;infectivity during incubation
  time-immunity                                                    ;duration of immunity: if "hospitalized" = forever (1000 ticks); if "isolated at home" = 100 ticks.
                                                                      ;;Distinction between severe cases (that develop strong antibodies) and those who do not.
  count-immunity                                                   ;count of days of immunity
]

to setup
  clear-all
  setup-turtles
  setup-infected
  setup-parameters
  set max-infected (count turtles with [infected?])
  set max-immun duration-immunity
  reset-ticks
end

to setup-turtles
  create-turtles num-turtles [
    set color white
    set shape "person"
    set size 2
    set infected? false
    set immune? false
    set senior? false
    set tourist? false
    set countim 0                                                  ;resets the immunity count
    setxy random-pxcor random-pycor
  ]
end

to setup-infected
  ask n-of init-infected turtles [
   set color red
   set infected? true
  ]
end

to setup-parameters                                               ;it sets the parameters for the different countries
;ITALY                                        ;slider parameters: num-turtles 1000; init-infect 6; transmissibility 0.30; duration-immunity 100; speed 2.0; non-contagion-index 0.01; hospitalization 100
  if Italy [
    set seniors 230 set hospital-beds 13 set hospitalized-rate 1.5 set case-fatality-rate 0.8 set recovery-index 5.0
    set home-isolation-rate 5.0 set hospitalization 100 set transmissibility 0.30 set speed 2.0
  ]
  if Italy [set Italy1 39 set Italy2 51 set Italy3 95 set Italy4 109 set Italy5 128 set Italy6 156 set count-lockdown 0]

;GERMANY                                      ;slider parameters: num-turtles 1000; init-infect 6; transmissibility 0.30; duration-immunity 100; speed 2.0; non-contagion-index 0.01; hospitalization 60
  if Germany [
    set seniors 210 set hospital-beds 30 set hospitalized-rate 1.0 set case-fatality-rate 0.3 set recovery-index 6.0
    set home-isolation-rate 5.0 set hospitalization 60 set transmissibility 0.30 set speed 2.0
  ]
  if Germany [set Germany1 49 set Germany2 55 set Germany3 84 set Germany4 100 set Germany5 128 set Germany6 156 set count-lockdown 0]

;SWEDEN                                        ;slider parameters: num-turtles 1000; init-infect 6; transmissibility 0.30; duration-immunity 100; speed 2.0; non-contagion-index 0.01; hospitalization 100
  if Sweden [
    set seniors 200 set hospital-beds 20 set hospitalized-rate 1.5 set case-fatality-rate 0.4 set recovery-index 1.5
    set home-isolation-rate 4.7 set hospitalization 100 set transmissibility 0.30 set speed 2.0
  ]
  if Sweden [set Sweden1 47 set Sweden2 61 set Sweden3 103 set Sweden4 134 set count-lockdown 0]

;BRAZIL                                         ;slider parameters: num-turtles 1000; init-infect 6; transmissibility 0.30; duration-immunity 100; speed 2.0; non-contagion-index 0.01; hospitalization 100
  if Brazil [
    set seniors 90 set hospital-beds 9 set hospitalized-rate 1.3 set case-fatality-rate 0.3 set recovery-index 2.5
    set home-isolation-rate 6.0 set hospitalization 100 set transmissibility 0.30 set speed 2.0
  ]
  if Brazil [set Brazil1 21 set Brazil2 28 set Brazil3 51 set count-lockdown 0]

end

to go
  if ticks >= 365 [stop]                                                                      ;the simulation stops when tick = 365 (one year)
  if (count turtles with [color = red] + count turtles with [color = orange] +
    count turtles with [color = green]) >= 500 [stop]                                         ;contagion out of control!
  if ticks = 1 [ask n-of seniors turtles [set senior? true]]                                  ;a part of the population is elderly: this is regulated by the "seniors" variable
  infect-susceptibles                                                                         ;contagion phase
  recover-infected                                                                            ;some of the infected recover
  if count turtles with [color = blue or color = sky] >= 1
  [timeline]                                                                                  ;determines the stages of political decisions on lockdowns and reopenings
  move                                                                                        ;;;notice that the blue (hospitalized), the yellows (dead), and light blue (in home isolation) do not move

  total-gdp                                                                                   ;GDP calculation
  ;calculate-max-infected                                                                     ;;;;;;;;;;; unused variable (can be ignored) ;;;;;;;;;;
  if (total-cases > hospitalization) [
    ifelse hospital-capacity? and (count turtles with [color = blue] >= hospital-beds)
    [hospital-capacity] [hospital]]                                                           ;the model executes another routine (with an higher case fatality) when the max number of ICU beds is reached

  setup-tourist                                                                               ;tourist setup
  tourism                                                                                     ;tourist actions
  Rzero                                                                                       ;R0 and Re indexes calculation
  Herd-immunity                                                                               ;calculates level to be reached for herd immunity
  Immunity                                                                                    ;calculates immunity periods (different for blue and light blue)
  tick
end

to infect-susceptibles            ;**************** ATTENTION : depending on the selected country and its implemented measures, this step will vary ****************


 if Italy [
  if count-lockdown = (Italy1 - 1)                                                                                               ;settings for masks use and physical distance
   [set t-old transmissibility
   set p-d-old (transmissibility * 0.102)
   set p-d (transmissibility - (transmissibility * 0.102))
   set f-m-old (transmissibility * 0.143)
   set f-m (transmissibility - (transmissibility * 0.143))
   set pdfm (transmissibility - (transmissibility * 0.143 + transmissibility * 0.102))
  ]]

  if Italy [
  if count-lockdown = Italy1
      [if physical-distance [ifelse face-mask [set transmissibility pdfm][set transmissibility p-d]]]                             ;physical distance

  if count-lockdown = Italy1
    [if face-mask [ifelse physical-distance [set transmissibility pdfm][set transmissibility f-m]]]                               ;masks use
  ]

  if Germany [
  if count-lockdown = (Germany1 - 1)                                                                                              ;settings for masks use and physical distance
   [set t-old transmissibility
   set p-d-old (transmissibility * 0.102)
   set p-d (transmissibility - (transmissibility * 0.102))
   set f-m-old (transmissibility * 0.143)
   set f-m (transmissibility - (transmissibility * 0.143))
   set pdfm (transmissibility - (transmissibility * 0.143 + transmissibility * 0.102))
  ]]

  if Germany [
  if count-lockdown = Germany1
      [if physical-distance [ifelse face-mask [set transmissibility pdfm][set transmissibility p-d]]]                             ;physical distance

  if count-lockdown = Germany1
    [if face-mask [ifelse physical-distance [set transmissibility pdfm][set transmissibility f-m]]]                               ;masks use
  ]

  if Sweden [
  if count-lockdown = (Sweden1 - 1)                                                                                               ;settings for masks use and physical distance
   [set t-old transmissibility
   set p-d-old (transmissibility * (0.102))
   set p-d (transmissibility - (transmissibility * (0.102)))
   set f-m-old (transmissibility * (0.143 / 2))
   set f-m (transmissibility - (transmissibility * (0.143 / 2)))                                                                  ;the values are halved because there are no obligations, only advice
   set pdfm (transmissibility - (transmissibility * (0.143 / 2) + transmissibility * (0.102)))
  ]]

  if Sweden [
  if count-lockdown = Sweden2
      [if physical-distance [ifelse face-mask [set transmissibility pdfm][set transmissibility p-d]]]                              ;physical distance

  if count-lockdown = Sweden1
    [if face-mask [ifelse physical-distance [set transmissibility pdfm][set transmissibility f-m]]]                                ;masks use
  ]

  if Brazil [
  if count-lockdown = (Brazil1 - 1)                                                                                                ;settings for masks use and physical distance
  [set t-old transmissibility
   set p-d-old (transmissibility * (0.102 / 2))                                                                                    ;the values are halved because there are obligations only in some provinces
   set p-d (transmissibility - (transmissibility * (0.102 / 2)))
   set f-m-old (transmissibility * (0.143 / 2))
   set f-m (transmissibility - (transmissibility * (0.143 / 2)))                                                                   ;the values are halved because there are obligations only in some provinces
   set pdfm (transmissibility - (transmissibility * (0.143 / 2) + transmissibility * (0.102)))
  ]]

  if Brazil [
  if count-lockdown = Brazil3
      [if physical-distance [ifelse face-mask [set transmissibility pdfm][set transmissibility p-d]]]                              ;physical distance

  if count-lockdown = Brazil3
    [if face-mask [ifelse physical-distance [set transmissibility pdfm][set transmissibility f-m]]]                                ;masks use
  ]

  ask turtles with [color = white] [                                                                                               ;main contagion mechanism
    let infected-neighbors (count other turtles with [color = red or color = pink or color = sky or (color = orange and incubation >= 4)] in-radius 1)
    if (random-float 1 <  1 - (((1 - transmissibility) ^ infected-neighbors)) and not immune?)
      [set infected? true set color orange]]                                                                                       ;orange == virus in incubation

  ask turtles with [color = orange] [if incubation = 0 [if senior? = true [ifelse random-normal 3 1 < 3 [set maxincub 3] [set maxincub 5]]]]
  ask turtles with [color = orange] [if incubation = 0 [if senior? = false [ifelse random-normal 7 2 < 7 [set maxincub 5] [set maxincub 7]]]]
  ask turtles with [color = orange] [set incubation incubation + 1]
  ask turtles with [color = orange] [if incubation = maxincub [set color red set incubation 0]]

  ask turtles with [color = white] [                                                                                                ;contagion mechanism with incubation
    let infected-neighbors1 (count other turtles with [incubation = 1 and color = orange] in-radius 1)
    if (random-float 1 <  1 - (((1 - (transmissibility * 0.3)) ^ infected-neighbors1)) and not immune?)
      [set infected? true set color orange]]

  ask turtles with [color = white] [                                                                                                ;contagion mechanism with incubation
    let infected-neighbors2 (count other turtles with [incubation = 2 and color = orange] in-radius 1)
    if (random-float 1 <  1 - (((1 - (transmissibility * 0.4)) ^ infected-neighbors2)) and not immune?)
      [set infected? true set color orange]]

  ask turtles with [color = white] [                                                                                                ;contagion mechanism with incubation
    let infected-neighbors3 (count other turtles with [incubation = 3 and color = orange] in-radius 1)
    if (random-float 1 <  1 - (((1 - (transmissibility * 0.5)) ^ infected-neighbors3)) and not immune?)
      [set infected? true set color orange]]

  ask turtles with [color = orange] [                                                                                               ;definition of asymptomatics
    if (random-float 1 <  0.08 and not immune?)
      [set infected? true set color green]]

  ask turtles with [color = white or color = green] [                                                                               ;contagion mechanism with asymptomatics
    let infected-neighbors-asympt (count other turtles with [color = green] in-radius 1)
    if (random-float 1 <  1 - (((1 - (transmissibility * 0.1)) ^ infected-neighbors-asympt)) and not immune?)
      [set infected? true set color orange]]

  ask turtles with [color = orange or color = green] [
    let infected-neighbors-og (count other turtles with [color = red or color = pink or color = sky or (color = orange and incubation >= 4)] in-radius 1)
    if (random-float 1 <  1 - (((1 - (transmissibility)) ^ infected-neighbors-og)) and not immune?)
      [set infected? true set color red]]


  if hospital-capacity?[
    ifelse (count turtles with [color = blue] > hospital-beds) [set h-saturation 1]                                                  ;used for the graph about ICU hospital beds saturation
    [set h-saturation (count turtles with [color = blue] / (hospital-beds))]]

end

to timeline

; ITALY                              ;statistics: % over 65 on population = 22.6; ICU hospital beds = 2.6 each 1000; deaths/total cases =  14.55; healed/total cases = 76.89
  if Italy [

 set count-lockdown count-lockdown + 1
  if count-lockdown = Italy1 [set speed 1.7]               ;first lockdown: between municipalities (plus physical distancing and masks use)
  if count-lockdown = Italy2 [set speed 1.3]               ;second lockdown: all the non-essential activities
  if count-lockdown = Italy3 [set speed 1.5]               ;first reopenings
  if count-lockdown = Italy4 [set speed 1.7]               ;further reopenings
  if count-lockdown = Italy5 [set speed 2.0]               ;regions and EU reopening
  ;if count-lockdown = Italy6 [tourism]                    ;tourism reopening
  ]


; GERMANY                                 ;statistics: % over 65 on population = 21.4; ICU hospital beds = 6.0 each 1000; deaths/total cases = 4.67; healed/total cases = 91.15
if Germany [

 set count-lockdown count-lockdown + 1
  if count-lockdown = Germany1 [set speed 1.7]               ;first lockdown: schools, bar, restaurants, etc.
  if count-lockdown = Germany2 [set speed 1.3]               ;second lockdown: all the non-essential activities (plus physical distancing and masks use)
  if count-lockdown = Germany3 [set speed 1.5]               ;first reopenings
  if count-lockdown = Germany4 [set speed 1.7]               ;further reopenings
  if count-lockdown = Germany5 [set speed 2.0]               ;regions and EU reopening
  ;if count-lockdown = Germany6 [tourism]                    ;tourism reopening
  ]


; SWEDEN                                  ;statistics: % over 65 on population = 19.8; ICU hospital beds = 2.0 each 1000; deaths/total cases = 9.02; healed/total cases = 12.74
  if Sweden [

 set count-lockdown count-lockdown + 1
  if count-lockdown = Sweden1 [set speed 1.8]               ;first lockdown: schools
  if count-lockdown = Sweden2 [set speed 1.8]               ;physical distancing
  if count-lockdown = Sweden3 [set speed 1.6]               ;restrictions on travels
  if count-lockdown = Sweden4 [set speed 1.5]               ;further restrictions on travels
  ;if count-lockdown = Sweden5 [set speed 2.0]
  ;if count-lockdown = Sweden6 [tourism]                     ;tourism reopening
  ]

; BRAZIL                                  ;statistics: % over 65 on population = 8.6; ICU hospital beds = 1.1 each 1000; deaths/total cases = 4.65; healed/total cases = 49.81
  if Brazil [

 set count-lockdown count-lockdown + 1
  if count-lockdown = Brazil1 [set speed 1.8]               ;a district closes the non-essential activities
  if count-lockdown = Brazil2 [set speed 1.6]               ;another (more populous) district closes its non-essential activities
  if count-lockdown = Brazil3 [set speed 1.7]               ;some reopenings (but with physical distancing and masks use)
  ;if count-lockdown = Brazil4 [set speed 1.7]              ;further reopenings
  ;if count-lockdown = Brazil5 [set speed 2.0]              ;regions and EU reopening
  ;if count-lockdown = Brazil6 [tourism]                    ;tourism reopening
  ]

end

to hospital-capacity                                                                                                                    ;when all the hospital beds are occupied
  ask turtles with [color = red or color = pink]
  [if random-float 100 < hospitalized-rate [set color sky set immune? false set infected? true]]                                        ;defines the sick and not hospitalized people: light blue
  ask turtles with [color = sky]
  [if random-float 100 < (case-fatality-rate * 1.5) and senior? = false [set color yellow]]                                       ;defines the dead: yellow (without hospital the percentage increases)
  ask turtles with [color = sky]
  [if random-float 100 < (case-fatality-rate * 6 * 1.5) and senior? = true [set color yellow]]                                    ;defines the dead seniors: yellow (without hospital the percentage increases)
  ask turtles with [color = sky]                                                                                                        ;defines the recovered people: they become gray
  [if random-float 100 < (recovery-index / 1.5) and senior? = false [set color gray set healed healed + 1 set time-immunity max-immun]]      ;(with no hospital the percentage decreases)
  ask turtles with [color = sky]                                                                                                        ;defines the recovered seniors: they become gray
  [if random-float 100 < (recovery-index / 2.5) and senior? = true [set color gray set healed healed + 1 set time-immunity max-immun]]       ;(with a decreased percentage)

  ask turtles with [color = blue]
  [if random-float 100 < case-fatality-rate and senior? = false [set color yellow]]                                                         ;defines the dead: yellow
  ask turtles with [color = blue]
  [if random-float 100 < (case-fatality-rate * 6) and senior? = true [set color yellow]]                                                    ;defines the dead seniors: yellow
  ask turtles with [color = blue]                                                                                                       ;defines the recovered people: they become gray
  [if random-float 100 < recovery-index and senior? = false [set color gray set healed healed + 1 set time-immunity (max-immun * 10)]]       ;duration of immunity is forever
  ask turtles with [color = blue]                                                                                                       ;defines the recovered seniors: they become gray
  [if random-float 100 < (recovery-index / 2) and senior? = true [set color gray set healed healed + 1 set time-immunity (max-immun * 10)]]  ;duration of immunity is forever

end

to move
  ask turtles [if color = white and senior? = false [right random 360 forward speed]]
  ask turtles [if color = white and senior? = true [right random 360 forward (speed / 2)]]                                              ;the seniors move less
  ask turtles [if color = orange and senior? = false [right random 360 forward speed]]
  ask turtles [if color = orange and senior? = true [right random 360 forward (speed / 2)]]
  ask turtles [if color = red [right random 360 forward speed]]
  ask turtles [if color = red and senior? = true [right random 360 forward (speed / 2)]]
  ask turtles [if color = green [right random 360 forward speed]]
  ask turtles [if color = green and senior? = true [right random 360 forward (speed / 2)]]
  ask turtles [if color = gray [right random 360 forward speed]]
  ask turtles [if color = gray and senior? = true [right random 360 forward (speed / 2)]]
  set current-positive (count turtles with [color = red] + count turtles with [color = blue] + count turtles with [color = pink]        ;defines the "current-positive" variable
    + count turtles with [color = orange] + count turtles with [color = sky] + count turtles with [color = green])
  set deaths (count turtles with [color = yellow])                                                                                      ;defines the "deaths" variable
  set total-cases (current-positive + deaths + healed)                                                                                  ;defines the "total-cases" variable
end

to total-gdp                                                                                                                            ;GDP calculation
  if ticks = 2 [set gdp-init (gdp)]
  let gdpred (count turtles with [color = red and senior? = false])                                                                     ;GDP calculation for the workers with a speed defined by the slider
  let gdporange (count turtles with [color = orange and senior? = false])
  let gdpwhite (count turtles with [color = white and senior? = false])
  let gdpgray (count turtles with [color = gray and senior? = false])
  let gdpgreen (count turtles with [color = green and senior? = false])
  let gdp1 (gdpred + gdporange + gdpwhite + gdpgray + gdpgreen) * speed

  let gdpred1 (count turtles with [color = red and senior? = true])                                                                     ;GDP calculation for the seniors with less speed (1/2)
  let gdporange1 (count turtles with [color = orange and senior? = true])
  let gdpwhite1 (count turtles with [color = white and senior? = true])
  let gdpgray1 (count turtles with [color = gray and senior? = true])
  let gdpgreen1 (count turtles with [color = green and senior? = true])
  let gdp2 (gdpred1 + gdporange1 + gdpwhite1 + gdpgray1 + gdpgreen1) * (speed / 2)

  set gdp (gdp1 + gdp2)
  if ticks > 2 [set gdp-value (((gdp / gdp-init) - 1) * 100) / 2] set gdp-value (precision gdp-value 2)                           ;it is for monitoring %GDP and plot its graph
                                                                                           ; percentage increment normalized by the initial agents speed.

end

to recover-infected
  ask turtles with [color = red]
  [if random-float 1 < non-contagion-index
    [set infected? false
      ifelse remove-recovered?
      [set immune? true
        set color gray
        set healed healed + 1]
      [set color white]]]

end

to hospital

  ask turtles with [color = red or color = pink]
  [if random-float 100 < hospitalized-rate [set color blue set immune? false set infected? true]]                                        ;defines the hospitalized people: blue
  ask turtles with [color = blue]
  [if random-float 100 < case-fatality-rate and senior? = false [set color yellow]]                                                          ;defines the dead: yellow
  ask turtles with [color = blue]
  [if random-float 100 < (case-fatality-rate * 8) and senior? = true [set color yellow]]                                                     ;defines the dead seniors: yellow
  ask turtles with [color = blue]                                                                                                        ;defines the recovered people: they become gray
  [if random-float 100 < recovery-index and senior? = false [set color gray set healed healed + 1 set time-immunity (max-immun * 10)]]        ;immunity duration is forever
  ask turtles with [color = blue]                                                                                                        ;defines the recovered seniors: they become gray
  [if random-float 100 < (recovery-index / 2) and senior? = true [set color gray set healed healed + 1 set time-immunity (max-immun * 10)]]   ;immunity duration is forever


  ask turtles with [color = red or color = pink]
  [if random-float 100 < home-isolation-rate [set color sky set immune? false set infected? true]]                                       ;defines people in home isolation: light blue
  ask turtles with [color = sky]
  [if random-float 100 < (case-fatality-rate / 1.5) and senior? = false [set color yellow]]                                                  ;defines the dead: yellow
  ask turtles with [color = sky]                                                                                                         ;defines the recovered people: they become gray
  [if random-float 100 < (case-fatality-rate * 5.0) and senior? = true [set color yellow]]                                                   ;defines the dead seniors: yellow
  ask turtles with [color = sky]                                                                                                         ;defines the recovered people: they become gray
  [if random-float 100 < (recovery-index * 2) and senior? = false [set color gray set healed healed + 1 set time-immunity max-immun]]         ;immunity duration is defined by the slider value
  ask turtles with [color = sky]                                                                                                         ;defines the recovered seniors: they become gray
  [if random-float 100 < recovery-index and senior? = true [set color gray set healed healed + 1 set time-immunity max-immun]]                ;immunity duration is defined by the slider value


  ask turtles with [color = green]                                                                                                       ;puts asymptomatics in home isolation
  [if random-float 100 < (home-isolation-rate / 7) [set color sky set immune? false set infected? true]]                                 ;less probability to find them
end

to setup-tourist                                                                                                                         ;settings for the infected tourists
  if Italy [
  if tourism? [if count-lockdown >= Italy6 [if (count turtles with [tourist? = true] = 0)                                                ;reopening to tourism
  [create-turtles 2 [
    set color pink
    set shape "person"
    set size 2
    set infected? true
    set immune? false
    set senior? false
    set tourist? true
    set stay-time 0                                                                                                                      ;sets to 0 the staying time
    setxy random-pxcor random-pycor
  ]]]]]

  if Italy [
  if tourism? [if count-lockdown >= Italy6 [if (count turtles with [tourist? = true] = 1)                                                ;re-sets infected tourists to 2
  [create-turtles 1 [
    set color pink
    set shape "person"
    set size 2
    set infected? true
    set immune? false
    set senior? false
    set tourist? true
    set stay-time 0
    setxy random-pxcor random-pycor
  ]]]]]

  if Germany [
  if tourism? [if count-lockdown >= Germany6 [if (count turtles with [tourist? = true] = 0)                                                ;reopening to tourism
  [create-turtles 2 [
    set color pink
    set shape "person"
    set size 2
    set infected? true
    set immune? false
    set senior? false
    set tourist? true
    set stay-time 0                                                                                                                      ;sets to 0 the staying time
    setxy random-pxcor random-pycor
  ]]]]]

  if Germany [
  if tourism? [if count-lockdown >= Germany6 [if (count turtles with [tourist? = true] = 1)                                                ;re-sets infected tourists to 2
  [create-turtles 1 [
    set color pink
    set shape "person"
    set size 2
    set infected? true
    set immune? false
    set senior? false
    set tourist? true
    set stay-time 0
    setxy random-pxcor random-pycor
  ]]]]]

  if Sweden [
  if tourism? [if (count turtles with [tourist? = true] = 0)                                                ;no closure to tourism
  [create-turtles 1 [
    set color pink
    set shape "person"
    set size 2
    set infected? true
    set immune? false
    set senior? false
    set tourist? true
    set stay-time 0                                                                                                                      ;sets to 0 the staying time
    setxy random-pxcor random-pycor
  ]]]]

  if Brazil [
  if tourism? [if (count turtles with [tourist? = true] = 0)                                                ;no closure to tourism
  [create-turtles 1 [
    set color pink
    set shape "person"
    set size 2
    set infected? true
    set immune? false
    set senior? false
    set tourist? true
    set stay-time 0                                                                                                                      ;sets to 0 the staying time
    setxy random-pxcor random-pycor
  ]]]]


end

to tourism                                                                                                                               ;actions of the infected tourist
  ask turtles with [tourist? = true] [set stay-time stay-time + 1]
  ask turtles [if color = pink and tourist? = true [right random 360 forward (speed * 1)]]
  ask turtles with [tourist? = true] [if stay-time > 9 [die]]
end

to Rzero                                                                                                                                 ;R0 parameter construction
  if ticks = 1 or ticks = 11 or ticks = 21 or ticks = 31 or ticks = 41 or ticks = 51 or ticks = 61 or ticks = 71 or ticks = 81 or ticks = 91
  or ticks = 101 or ticks = 111 or ticks = 121 or ticks = 131 or ticks = 141 or ticks = 151 or ticks = 161 or ticks = 171 or ticks = 181 or ticks = 191
  or ticks = 201 or ticks = 211 or ticks = 221 or ticks = 231 or ticks = 241 or ticks = 251 or ticks = 261 or ticks = 271 or ticks = 281 or ticks = 291
  or ticks = 301 or ticks = 311 or ticks = 321 or ticks = 331 or ticks = 341 or ticks = 351 or ticks = 361 or ticks = 371
  [set ma5 ((tc1 + tc10 + tc9 + tc8 + tc7) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc1 total-cases set r01 R0-calculation]

 if ticks = 2 or ticks = 12 or ticks = 22 or ticks = 32 or ticks = 42 or ticks = 52 or ticks = 62 or ticks = 72 or ticks = 82 or ticks = 92
  or ticks = 102 or ticks = 112 or ticks = 122 or ticks = 132 or ticks = 142 or ticks = 152 or ticks = 162 or ticks = 172 or ticks = 182 or ticks = 192
  or ticks = 202 or ticks = 212 or ticks = 222 or ticks = 232 or ticks = 242 or ticks = 252 or ticks = 262 or ticks = 272 or ticks = 282 or ticks = 292
  or ticks = 302 or ticks = 312 or ticks = 322 or ticks = 332 or ticks = 342 or ticks = 352 or ticks = 362 or ticks = 372
  [set ma5 ((tc2 + tc1 + tc10 + tc9 + tc8) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc2 total-cases set r02 R0-calculation]

  if ticks = 3 or ticks = 13 or ticks = 23 or ticks = 33 or ticks = 43 or ticks = 53 or ticks = 63 or ticks = 73 or ticks = 83 or ticks = 93
  or ticks = 103 or ticks = 113 or ticks = 123 or ticks = 133 or ticks = 143 or ticks = 153 or ticks = 163 or ticks = 173 or ticks = 183 or ticks = 193
  or ticks = 203 or ticks = 213 or ticks = 223 or ticks = 233 or ticks = 243 or ticks = 253 or ticks = 263 or ticks = 273 or ticks = 283 or ticks = 293
  or ticks = 303 or ticks = 313 or ticks = 323 or ticks = 333 or ticks = 343 or ticks = 353 or ticks = 363 or ticks = 373
  [set ma5 ((tc3 + tc2 + tc1 + tc10 + tc9) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc3 total-cases set r03 R0-calculation]

  if ticks = 4 or ticks = 14 or ticks = 24 or ticks = 34 or ticks = 44 or ticks = 54 or ticks = 64 or ticks = 74 or ticks = 84 or ticks = 94
  or ticks = 104 or ticks = 114 or ticks = 124 or ticks = 134 or ticks = 144 or ticks = 154 or ticks = 164 or ticks = 174 or ticks = 184 or ticks = 194
  or ticks = 204 or ticks = 214 or ticks = 224 or ticks = 234 or ticks = 244 or ticks = 254 or ticks = 264 or ticks = 274 or ticks = 284 or ticks = 294
  or ticks = 304 or ticks = 314 or ticks = 324 or ticks = 334 or ticks = 344 or ticks = 354 or ticks = 364 or ticks = 374
  [set ma5 ((tc4 + tc3 + tc2 + tc1 + tc10) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc4 total-cases set r04 R0-calculation]

  if ticks = 5 or ticks = 15 or ticks = 25 or ticks = 35 or ticks = 45 or ticks = 55 or ticks = 65 or ticks = 75 or ticks = 85 or ticks = 95
  or ticks = 105 or ticks = 115 or ticks = 125 or ticks = 135 or ticks = 145 or ticks = 155 or ticks = 165 or ticks = 175 or ticks = 185 or ticks = 195
  or ticks = 205 or ticks = 215 or ticks = 225 or ticks = 235 or ticks = 245 or ticks = 255 or ticks = 265 or ticks = 275 or ticks = 285 or ticks = 295
  or ticks = 305 or ticks = 315 or ticks = 325 or ticks = 335 or ticks = 345 or ticks = 355 or ticks = 365 or ticks = 375
  [set ma5 ((tc5 + tc4 + tc3 + tc2 + tc1) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc5 total-cases set r05 R0-calculation]

  if ticks = 6 or ticks = 16 or ticks = 26 or ticks = 36 or ticks = 46 or ticks = 56 or ticks = 66 or ticks = 76 or ticks = 86 or ticks = 96
  or ticks = 106 or ticks = 116 or ticks = 126 or ticks = 136 or ticks = 146 or ticks = 156 or ticks = 166 or ticks = 176 or ticks = 186 or ticks = 196
  or ticks = 206 or ticks = 216 or ticks = 226 or ticks = 236 or ticks = 246 or ticks = 256 or ticks = 266 or ticks = 276 or ticks = 286 or ticks = 296
  or ticks = 306 or ticks = 316 or ticks = 326 or ticks = 336 or ticks = 346 or ticks = 356 or ticks = 366 or ticks = 376
  [set ma5 ((tc6 + tc5 + tc4 + tc3 + tc2) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc6 total-cases set r06 R0-calculation]

  if ticks = 7 or ticks = 17 or ticks = 27 or ticks = 37 or ticks = 47 or ticks = 57 or ticks = 67 or ticks = 77 or ticks = 87 or ticks = 97
  or ticks = 107 or ticks = 117 or ticks = 127 or ticks = 137 or ticks = 147 or ticks = 157 or ticks = 167 or ticks = 177 or ticks = 187 or ticks = 197
  or ticks = 207 or ticks = 217 or ticks = 227 or ticks = 237 or ticks = 247 or ticks = 257 or ticks = 267 or ticks = 277 or ticks = 287 or ticks = 297
  or ticks = 307 or ticks = 317 or ticks = 327 or ticks = 337 or ticks = 347 or ticks = 357 or ticks = 367 or ticks = 377
  [set ma5 ((tc7 + tc6 + tc5 + tc4 + tc3) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc7 total-cases set r07 R0-calculation]

  if ticks = 8 or ticks = 18 or ticks = 28 or ticks = 38 or ticks = 48 or ticks = 58 or ticks = 68 or ticks = 78 or ticks = 88 or ticks = 98
  or ticks = 108 or ticks = 118 or ticks = 128 or ticks = 138 or ticks = 148 or ticks = 158 or ticks = 168 or ticks = 178 or ticks = 188 or ticks = 198
  or ticks = 208 or ticks = 218 or ticks = 228 or ticks = 238 or ticks = 248 or ticks = 258 or ticks = 268 or ticks = 278 or ticks = 288 or ticks = 298
  or ticks = 308 or ticks = 318 or ticks = 328 or ticks = 338 or ticks = 348 or ticks = 358 or ticks = 368 or ticks = 378
  [set ma5 ((tc8 + tc7 + tc6 + tc5 + tc4) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc8 total-cases set r08 R0-calculation]

  if ticks = 9 or ticks = 19 or ticks = 29 or ticks = 39 or ticks = 49 or ticks = 59 or ticks = 69 or ticks = 79 or ticks = 89 or ticks = 99
  or ticks = 109 or ticks = 119 or ticks = 129 or ticks = 139 or ticks = 149 or ticks = 159 or ticks = 169 or ticks = 179 or ticks = 189 or ticks = 199
  or ticks = 209 or ticks = 219 or ticks = 229 or ticks = 239 or ticks = 249 or ticks = 259 or ticks = 269 or ticks = 279 or ticks = 289 or ticks = 299
  or ticks = 309 or ticks = 319 or ticks = 329 or ticks = 339 or ticks = 349 or ticks = 359 or ticks = 369 or ticks = 379
  [set ma5 ((tc9 + tc8 + tc7 + tc6 + tc5) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc9 total-cases set r09 R0-calculation]

  if ticks = 10 or ticks = 20 or ticks = 30 or ticks = 40 or ticks = 50 or ticks = 60 or ticks = 70 or ticks = 80 or ticks = 90 or ticks = 100
  or ticks = 110 or ticks = 120 or ticks = 130 or ticks = 140 or ticks = 150 or ticks = 160 or ticks = 170 or ticks = 180 or ticks = 190 or ticks = 200
  or ticks = 210 or ticks = 220 or ticks = 230 or ticks = 240 or ticks = 250 or ticks = 260 or ticks = 270 or ticks = 280 or ticks = 290 or ticks = 300
  or ticks = 310 or ticks = 320 or ticks = 330 or ticks = 340 or ticks = 350 or ticks = 360 or ticks = 370 or ticks = 380
  [set ma5 ((tc10 + tc9 + tc8 + tc7 + tc6) / 5) set ma10 ((tc10 + tc9 + tc8 + tc7 + tc6 + tc5 + tc4 + tc3 + tc2 + tc1) / 10) set tc10 total-cases set r010 R0-calculation]

  ifelse (ma5 - ma10) > 0 and (total-cases - ma5) > 0 [
    set R0-calculation (total-cases - ma5) / (ma5 - ma10) if R0-calculation > 5 [set R0-calculation 5]] [set R0-calculation 0]             ;5-day and 10-day moving average
  set R0 (((r01 + r02 + r03 + r04 + r05 + r06 + r07 + r08 + r09 + r010) / 10) * 0.8)
  set Re R0 * (count turtles with [color = white] / num-turtles)                                                                           ;Re parameter calculation (effective reproduction number)

end

to Herd-immunity

  if ticks > 1 [ifelse R0 != 0 [set Pc (1 - (1 / R0)) if Pc < 0 [set Pc 0]] [set Pc 0]]                                                    ;herd immunity threshold calculation

end

to Immunity

  ask turtles with [color = gray] [set countim countim + 1]
  ask turtles with [color = gray] [if countim = time-immunity [set color white set immune? false set countim 0]]                           ;differentiates the immunity duration
                                                                                                                                           ;if the agent has been in hospital, immune for the whole simulation
end

to calculate-max-infected                                                                                                                  ;;;;;;; unused variable (can be ignored) ;;;;;;;
  let x (count turtles with [infected?])
  if x > max-infected
  [set max-infected x]
end